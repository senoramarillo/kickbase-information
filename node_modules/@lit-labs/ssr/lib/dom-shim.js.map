{"version":3,"file":"dom-shim.js","sourceRoot":"","sources":["../src/lib/dom-shim.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * This module *minimally* implements the DOM interfaces needed for lit-html and\n * LitElement to boot. Since most of the implementation of lit-html and\n * LitElement are not actually used, we mostly just need to defining base\n * classes for extension, etc. We will have a roughly functioning\n * CustomElementRegistry however.\n */\n\nimport fetch from 'node-fetch';\n\n/**\n * Constructs a fresh instance of the \"window\" vm context to use for evaluating\n * user SSR code. Includes a minimal shim of DOM APIs.\n *\n * @param includeJSBuiltIns Whether certain standard JS context globals like\n *  `console` and `setTimeout` should also be added to the global. Should\n *  generally only be true when adding window to a fresh VM context that\n *  starts with nothing.\n * @param props Additional properties to add to the window global\n */\nexport const getWindow = ({\n  includeJSBuiltIns = false,\n  props = {},\n}): {[key: string]: unknown} => {\n  const attributes: WeakMap<HTMLElement, Map<string, string>> = new WeakMap();\n  const attributesForElement = (element: HTMLElement) => {\n    let attrs = attributes.get(element);\n    if (!attrs) {\n      attributes.set(element, (attrs = new Map()));\n    }\n    return attrs;\n  };\n\n  class Element {}\n\n  abstract class HTMLElement extends Element {\n    get attributes() {\n      return Array.from(attributesForElement(this)).map(([name, value]) => ({\n        name,\n        value,\n      }));\n    }\n    private _shadowRoot: null | ShadowRoot = null;\n    get shadowRoot() {\n      return this._shadowRoot;\n    }\n    abstract attributeChangedCallback?(\n      name: string,\n      old: string | null,\n      value: string | null\n    ): void;\n    setAttribute(name: string, value: unknown) {\n      // Emulate browser behavior that silently casts all values to string. E.g.\n      // `42` becomes `\"42\"` and `{}` becomes `\"[object Object]\"\"`.\n      attributesForElement(this).set(name, String(value));\n    }\n    removeAttribute(name: string) {\n      attributesForElement(this).delete(name);\n    }\n    hasAttribute(name: string) {\n      return attributesForElement(this).has(name);\n    }\n    attachShadow(init: ShadowRootInit) {\n      const shadowRoot = {host: this};\n      if (init && init.mode === 'open') {\n        this._shadowRoot = shadowRoot;\n      }\n      return shadowRoot;\n    }\n    getAttribute(name: string) {\n      const value = attributesForElement(this).get(name);\n      return value === undefined ? null : value;\n    }\n  }\n\n  interface CustomHTMLElement {\n    new (): HTMLElement;\n    observedAttributes?: string[];\n  }\n\n  class ShadowRoot {}\n\n  class Document {\n    get adoptedStyleSheets() {\n      return [];\n    }\n    createTreeWalker() {\n      return {};\n    }\n    createTextNode() {\n      return {};\n    }\n    createElement() {\n      return {};\n    }\n  }\n\n  class CSSStyleSheet {\n    replace() {}\n  }\n\n  type CustomElementRegistration = {\n    ctor: {new (): HTMLElement};\n    observedAttributes: string[];\n  };\n\n  class CustomElementRegistry {\n    private __definitions = new Map<string, CustomElementRegistration>();\n\n    define(name: string, ctor: CustomHTMLElement) {\n      this.__definitions.set(name, {\n        ctor,\n        observedAttributes:\n          (ctor as CustomHTMLElement).observedAttributes ?? [],\n      });\n    }\n\n    get(name: string) {\n      const definition = this.__definitions.get(name);\n      return definition && definition.ctor;\n    }\n  }\n\n  const window = {\n    Element,\n    HTMLElement,\n    Document,\n    document: new Document(),\n    CSSStyleSheet,\n    ShadowRoot,\n    CustomElementRegistry,\n    customElements: new CustomElementRegistry(),\n    btoa(s: string) {\n      return Buffer.from(s, 'binary').toString('base64');\n    },\n    fetch: (url: URL, init: {}) =>\n      // TODO(aomarks) The typings from node-fetch are wrong because they don't\n      // allow URL.\n      fetch(url as unknown as Parameters<typeof fetch>[0], init),\n\n    location: new URL('http://localhost'),\n    MutationObserver: class {\n      observe() {}\n    },\n\n    // No-op any async tasks\n    requestAnimationFrame() {},\n\n    // Set below\n    window: undefined as unknown,\n\n    // User-provided globals, like `require`\n    ...props,\n  };\n\n  window.window = window;\n\n  if (includeJSBuiltIns) {\n    Object.assign(window, {\n      // No-op any async tasks\n      setTimeout() {},\n      clearTimeout() {},\n      // Required for node-fetch\n      Buffer,\n      console: {\n        log(...args: unknown[]) {\n          console.log(...args);\n        },\n        info(...args: unknown[]) {\n          console.info(...args);\n        },\n        warn(...args: unknown[]) {\n          console.warn(...args);\n        },\n        debug(...args: unknown[]) {\n          console.debug(...args);\n        },\n        error(...args: unknown[]) {\n          console.error(...args);\n        },\n        assert(bool: unknown, msg: string) {\n          if (!bool) {\n            throw new Error(msg);\n          }\n        },\n      },\n    });\n  }\n\n  return window;\n};\n\nexport const installWindowOnGlobal = (props: {[key: string]: unknown} = {}) => {\n  // Avoid installing the DOM shim if one already exists\n  if (globalThis.window === undefined) {\n    const window = getWindow({props});\n    // Copy initial window globals to node global\n    Object.assign(globalThis, window);\n    // Set up global reference to window so all globals added to window are\n    // added to the node global\n    globalThis.window = globalThis as typeof globalThis & Window;\n  }\n};\n"]}