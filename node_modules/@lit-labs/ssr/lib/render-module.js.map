{"version":3,"file":"render-module.js","sourceRoot":"","sources":["../src/lib/render-module.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,SAAS,EAAC,MAAM,oBAAoB,CAAC;AAC7C,OAAO,EAAC,YAAY,EAAC,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAC,aAAa,EAAC,MAAM,QAAQ,CAAC;AAErC;;;GAGG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,EAC/B,SAAiB,EACjB,qBAA6B,EAC7B,YAAoB,EACpB,IAAe,EACf,EAAE;IACF,MAAM,MAAM,GAAG,SAAS,CAAC;QACvB,iBAAiB,EAAE,IAAI;QACvB,KAAK,EAAE;YACL,uEAAuE;YACvE,gFAAgF;YAChF,OAAO,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;SACxC;KACF,CAAC,CAAC;IACH,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;IAClD,MAAM,YAAY,GAAG,MAAM,MAAM,CAAC,YAAY,CAC5C,SAAS,EACT,qBAAqB,CACtB,CAAC;IACF,MAAM,EAAC,MAAM,EAAC,GAAG,YAAY,CAAC;IAC9B,MAAM,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,CAAa,CAAC;IACrD,0DAA0D;IAC1D,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {getWindow} from '../lib/dom-shim.js';\nimport {ModuleLoader} from './module-loader.js';\nimport {createRequire} from 'module';\n\n/**\n * Imports a module into a web-like rendering VM content and calls the function\n * exported as `functionName`.\n */\nexport const renderModule = async (\n  specifier: string,\n  referrerPathOrFileUrl: string,\n  functionName: string,\n  args: unknown[]\n) => {\n  const window = getWindow({\n    includeJSBuiltIns: true,\n    props: {\n      // We need to give window a require to load CJS modules used by the SSR\n      // implementation. If we had only JS module dependencies, we wouldn't need this.\n      require: createRequire(import.meta.url),\n    },\n  });\n  const loader = new ModuleLoader({global: window});\n  const importResult = await loader.importModule(\n    specifier,\n    referrerPathOrFileUrl\n  );\n  const {module} = importResult;\n  const f = module.namespace[functionName] as Function;\n  // TODO: should we require the result be an AsyncIterable?\n  return f(...args);\n};\n"]}